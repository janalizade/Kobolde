{"ast":null,"code":"var _jsxFileName = \"/home/ahoora/kobolde/project/kobolde/kobolde-frontend/src/views/TableList.js\";\nimport React, { Component } from \"react\";\nimport { Card, Header, Form, Input, Icon } from \"semantic-ui-react\";\nimport \"./table-list.css\";\nimport axios from 'axios';\nimport { base64StringToBlob } from 'blob-util';\nimport { Button, TextField, Paper, Box, Typography, Grid, InputLabel } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport formData from 'form-data';\nimport Resizer from 'react-image-file-resizer';\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { CircularProgress } from '@material-ui/core';\nimport ColoredLinearProgress from './LineProgress';\nimport Card1 from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport IconButton from '@material-ui/core/IconButton';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\nimport Swal from 'sweetalert2';\nimport TrashIcon from '@material-ui/icons/DeleteOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  root_card: {\n    marginTop: theme.spacing(2),\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: 2200,\n    alignItems: 'center'\n  },\n  Field: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    width: '90%',\n    align: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  container: {\n    flexWrap: 'wrap'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  root: {\n    width: '100%',\n    maxWidth: 1800,\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto'\n  },\n  Table: {\n    width: '100%',\n    backgroundColor: 'orange',\n    maxWidth: 1800,\n    marginTop: 350\n  },\n  input: {\n    display: 'none'\n  },\n  formControl: {\n    width: '100%',\n    margin: theme.spacing(1)\n  },\n  button: {\n    width: '90%',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1)\n  }\n});\n\nfunction ButtonComponent(props) {\n  const {\n    onClick,\n    loading\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    onClick: onClick,\n    disabled: loading,\n    style: {\n      width: '100%',\n      backgroundColor: 'orange'\n    },\n    children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 14\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }, this), !loading && 'Sync']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ButtonComponent;\n\nclass MyTaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = async event => {\n      const file = event.target.files[0];\n    };\n\n    this.onClick = () => {\n      if (this.state.connectionStatus == 'online') {\n        this.setState({\n          loading: true\n        });\n        setTimeout(() => this.setState({\n          loading: false\n        }), 3000); //3 seconds\n\n        let tasklist = JSON.parse(localStorage.getItem(\"tasklist\"));\n\n        if (tasklist) {\n          tasklist.map((item, index) => {\n            //if (tasklist[index].status == true){\n            console.log(\"tasklist\", tasklist);\n            var formdata = new formData();\n            formdata.append('title', item.task);\n            formdata.append('serialNo', item.serialNo);\n            formdata.append('category_id', this.state.categoryId);\n            formdata.append('arbetsGang', item.arbetsGang);\n            formdata.append('arbetsTid', item.arbetsTid);\n            const contentType = 'image/png';\n            const data = item.image.split('base64,')[1];\n            const blob = base64StringToBlob(data, contentType);\n            formdata.append('image', blob);\n            var config = {\n              method: 'post',\n              url: 'https://localhost:8080/api/v1/admin/productx',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              data: formdata\n            };\n            axios(config).then(function (response) {\n              console.log(JSON.stringify(response.data));\n            }).catch(function (error) {\n              Swal.fire('', 'Kontrollera ditt internet förbindelse', '');\n              console.log(error);\n            }); // }\n          });\n        }\n      } else {\n        Swal.fire('The Internet?', 'Controllera ditt internet förbindelse', 'question');\n      }\n    };\n\n    this.componentDidMount = () => {\n      var status = navigator.onLine;\n\n      if (status) {\n        this.setState({\n          connectionStatus: \"online\"\n        });\n      } else {\n        this.setState({\n          connectionStatus: \"offline\"\n        });\n      }\n\n      this.getTasks(); //Category List loaded from database\n\n      axios.get('https://kobolde.ahoora.se:8443/api/v1/admin/category').then(res => {\n        const categories = res.data;\n        localStorage.setItem(\"categoryItem\", JSON.stringify(categories));\n        let categoryItem = JSON.parse(localStorage.getItem(\"categoryItem\"));\n        this.setState({\n          categoryItem: categoryItem\n        });\n\n        if (Object.keys(categoryItem)[0]) {\n          this.setState({\n            categoryId: categoryItem[Object.keys(categoryItem)[0]]._id\n          });\n        }\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.fileChangedHandler = event => {\n      var fileInput = false;\n\n      if (event.target.files[0]) {\n        fileInput = true;\n      }\n\n      if (fileInput) {\n        Resizer.imageFileResizer(event.target.files[0], 300, 300, 'JPEG', 100, 0, uri => {\n          this.setState({\n            image: uri\n          });\n          console.log(uri);\n        }, 'base64');\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        categoryId: event.target.value\n      });\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      // check is task is empty string\n      if (this.state.task) {\n        // get the task list from the local storage\n        let tasklist = JSON.parse(localStorage.getItem(\"tasklist\")); // task list is null means empty\n        // create an empty list\n\n        if (tasklist == null) {\n          tasklist = [];\n        } // create task object\n        // default status is false\n\n\n        let task = {\n          task: ` ${this.state.task}`,\n          category: `${this.state.categoryId}`,\n          serialNo: ` ${this.state.serialNo}`,\n          arbetsGang: ` ${this.state.arbetsGang}`,\n          arbetsTid: ` ${this.state.arbetsTid}`,\n          image: ` ${this.state.image}`,\n          status: false\n        }; // add the task to the task list\n\n        tasklist.push(task); // save the task list in the local storage\n\n        localStorage.setItem(\"tasklist\", JSON.stringify(tasklist)); // clear the form\n\n        this.setState({\n          task: \"\"\n        });\n        this.setState({\n          category: \"\"\n        });\n        this.setState({\n          serialNo: \"\"\n        });\n        this.setState({\n          arbetsGang: \"\"\n        });\n        this.setState({\n          arbetsTid: \"\"\n        });\n        this.setState({\n          image: \"\"\n        }); // refresh the tasks\n\n        this.getTasks();\n      }\n    };\n\n    this.getTasks = () => {\n      const {\n        classes\n      } = this.props; // get the task list from the local storage\n\n      let tasklist = JSON.parse(localStorage.getItem(\"tasklist\")); // check if task list is empty\n\n      if (tasklist) {\n        // sort all the tasks on the basis of status\n        // completed task will move down\n        tasklist = tasklist.sort((a, b) => {\n          if (a.status) {\n            return 1;\n          } else if (b.status) {\n            return -1;\n          }\n\n          return 0;\n        }); // save the task list in the local storage\n\n        localStorage.setItem(\"tasklist\", JSON.stringify(tasklist)); // set the tasklist to the state\n\n        this.setState({\n          // default color\n          // Incomplete: yellow\n          // complete: green\n          tasklist: tasklist.map((item, index) => {\n            let color = \"yellow\";\n            let cardBackground = {\n              background: \"white\"\n            };\n            let taskComplete = {\n              textDecoration: \"none\"\n            };\n\n            if (item.status) {\n              color = \"green\";\n              cardBackground.background = \"beige\";\n              taskComplete[\"textDecoration\"] = \"line-through\";\n            }\n\n            return /*#__PURE__*/_jsxDEV(Card1, {\n              color: color,\n              fluid: true,\n              style: cardBackground,\n              className: classes.root_card,\n              children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n                children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                  className: classes.media,\n                  image: item.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    gutterBottom: true,\n                    variant: \"body2\",\n                    component: \"h2\",\n                    children: [\"Produkt Title:\", item.task]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    component: \"p\",\n                    children: [\"Produkt serialNo:\", item.serialNo]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    component: \"p\",\n                    children: [\"Produkt arbetsG\\xE5ng:\", item.arbetsGang]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    component: \"p\",\n                    children: [\"Produkt arbetsTid:\", item.arbetsTid]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  link: true,\n                  name: \"check circle\",\n                  color: \"green\",\n                  onClick: () => this.updateTask(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    paddingRight: 10\n                  },\n                  children: \"Done\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                  link: true,\n                  name: \"undo\",\n                  color: \"yellow\",\n                  onClick: () => this.undoTask(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    paddingRight: 10\n                  },\n                  children: \"Undo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"delete\",\n                  className: classes.margin,\n                  color: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                    fontSize: \"small\",\n                    onClick: () => this.deleteTask(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 9\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 11\n            }, this);\n          })\n        });\n      }\n    };\n\n    this.updateTask = index => {\n      // get the task list from the local storage\n      let tasklist = JSON.parse(localStorage.getItem(\"tasklist\")); // change status to true\n\n      tasklist[index].status = true; // save the updated task list\n\n      localStorage.setItem(\"tasklist\", JSON.stringify(tasklist)); // refresh the task list\n\n      this.getTasks();\n    };\n\n    this.undoTask = index => {\n      // get the task list from the local storage\n      let tasklist = JSON.parse(localStorage.getItem(\"tasklist\")); // change status to false\n\n      tasklist[index].status = false; // save the updated task list\n\n      localStorage.setItem(\"tasklist\", JSON.stringify(tasklist)); // refresh the task list\n\n      this.getTasks();\n    };\n\n    this.deleteTask = index => {\n      // get the task list from the local storage\n      let tasklist = JSON.parse(localStorage.getItem(\"tasklist\")); // remove the task from the task list\n\n      tasklist.splice(index, 1); // save the updated task list\n\n      localStorage.setItem(\"tasklist\", JSON.stringify(tasklist)); // refresh the task list\n\n      this.getTasks();\n    };\n\n    this.state = {\n      file: null\n    };\n    this.state = {\n      task: \"\",\n      category: \"\",\n      serialNo: \"\",\n      arbetsGang: \"\",\n      arbetsTid: \"\",\n      image: {\n        file: null\n      },\n      tasklist: [],\n      selection: 1,\n      categoryItem: [],\n      categoryId: \"\",\n      open: [false],\n      loading: false\n    };\n    window.localStorage.clear();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const isConnection = this.state.connectionStatus;\n    let icon;\n\n    if (isConnection) {\n      icon = /*#__PURE__*/_jsxDEV(WifiIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this);\n    } else {\n      icon = /*#__PURE__*/_jsxDEV(WifiOffIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          direction: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.formControl,\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(NativeSelect, {\n                id: \"demo-controlled-open-select\",\n                variant: \"outlined\",\n                open: this.open,\n                className: classes.Field,\n                onClose: this.handleClose,\n                onOpen: this.handleOpen,\n                onChange: this.handleChange,\n                children: this.state.categoryItem.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item._id,\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 15\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              className: classes.container,\n              onSubmit: this.onSubmit,\n              novalidate: true,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                novalidate: true,\n                fullWidth: true,\n                type: \"text\",\n                name: \"task\",\n                onChange: this.onChange,\n                value: this.state.task,\n                placeholder: \"motor...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                novalidate: true,\n                fullWidth: true,\n                type: \"text\",\n                name: \"serialNo\",\n                onChange: this.onChange,\n                value: this.state.serialNo,\n                placeholder: \"serieNummer...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                novalidate: true,\n                fullWidth: true,\n                type: \"text\",\n                name: \"arbetsGang\",\n                onChange: this.onChange,\n                value: this.state.arbetsGang,\n                placeholder: \"arbetsG\\xE5ng...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                novalidate: true,\n                fullWidth: true,\n                type: \"text\",\n                name: \"arbetsTid\",\n                onChange: this.onChange,\n                value: this.state.arbetsTid,\n                placeholder: \"arbetsTid...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                accept: \"image/*\",\n                className: classes.input,\n                name: \"file\",\n                id: \"icon-button-file\",\n                type: \"file\",\n                onChange: this.fileChangedHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"icon-button-file\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  \"aria-label\": \"upload picture\",\n                  component: \"span\",\n                  children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                fullWidth: true,\n                type: \"submit\",\n                fullWidth: true,\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: this.onSubmit,\n                className: classes.submit,\n                children: \"L\\xE4gg till ny Produkt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [this.state.loading && /*#__PURE__*/_jsxDEV(ColoredLinearProgress, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 40\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ButtonComponent, {\n                  variant: \"outlined\",\n                  margin: \"normal\",\n                  fullWidth: true,\n                  onClick: this.onClick,\n                  loading: this.state.loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 9,\n          md: 9,\n          lg: 9,\n          children: /*#__PURE__*/_jsxDEV(Card.Group, {\n            className: classes.paper,\n            children: this.state.tasklist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(MyTaskList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonComponent\");","map":{"version":3,"sources":["/home/ahoora/kobolde/project/kobolde/kobolde-frontend/src/views/TableList.js"],"names":["React","Component","Card","Header","Form","Input","Icon","axios","base64StringToBlob","Button","TextField","Paper","Box","Typography","Grid","InputLabel","withStyles","formData","Resizer","FormControl","NativeSelect","CircularProgress","ColoredLinearProgress","Card1","CardActionArea","CardActions","CardContent","CardMedia","Container","Avatar","CssBaseline","PhotoCamera","IconButton","WifiIcon","WifiOffIcon","Swal","TrashIcon","styles","theme","root_card","marginTop","spacing","maxWidth","media","height","paper","display","flexDirection","alignItems","Field","marginLeft","marginRight","width","align","avatar","margin","backgroundColor","palette","secondary","main","container","flexWrap","form","submit","root","unit","overflowX","Table","input","formControl","button","ButtonComponent","props","onClick","loading","MyTaskList","constructor","onChange","event","file","target","files","state","connectionStatus","setState","setTimeout","tasklist","JSON","parse","localStorage","getItem","map","item","index","console","log","formdata","append","task","serialNo","categoryId","arbetsGang","arbetsTid","contentType","data","image","split","blob","config","method","url","headers","then","response","stringify","catch","error","fire","componentDidMount","status","navigator","onLine","getTasks","get","res","categories","setItem","categoryItem","Object","keys","_id","handleClose","open","handleOpen","fileChangedHandler","fileInput","imageFileResizer","uri","handleChange","value","name","onSubmit","category","push","classes","sort","a","b","color","cardBackground","background","taskComplete","textDecoration","updateTask","paddingRight","undoTask","deleteTask","splice","selection","window","clear","render","isConnection","icon","title"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Header, Form, Input, Icon } from \"semantic-ui-react\";\nimport \"./table-list.css\";\nimport axios from 'axios';\nimport { base64StringToBlob } from 'blob-util';\nimport {\n  Button,\n  TextField,\n  Paper,\n  Box,\n  Typography,\n  Grid,\n  InputLabel\n\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport formData from 'form-data';\nimport Resizer from 'react-image-file-resizer';\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { CircularProgress} from '@material-ui/core';\nimport ColoredLinearProgress from './LineProgress';\nimport Card1 from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport IconButton from '@material-ui/core/IconButton';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\nimport Swal from 'sweetalert2'\nimport TrashIcon from '@material-ui/icons/DeleteOutlined';\nconst styles = theme => ({\n  root_card: {\n    marginTop: theme.spacing(2),\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: 2200,\n    alignItems: 'center',\n  },\n    Field: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    width: '90%',\n    align:'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  container: {\n    flexWrap: 'wrap',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  root: {\n    width: '100%',\n    maxWidth: 1800,\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  Table: {\n    width: '100%',\n    backgroundColor: 'orange',\n    maxWidth: 1800,\n    marginTop:350,\n  },\n  input: {\n    display: 'none',\n  },\n  formControl: {\n    width: '100%',\n    margin: theme.spacing(1),\n   },\n  button: {\n  \n   width: '90%',\n   marginLeft: theme.spacing(2),\n   marginRight: theme.spacing(2),\n   marginTop: theme.spacing(1),\n  \n  },\n});\n\n\nfunction ButtonComponent(props) {\n  const { onClick, loading} = props;\n   return (\n    <Button variant=\"contained\" onClick={onClick} disabled={loading} style={{width: '100%',  backgroundColor: 'orange'}} >\n      {loading && <CircularProgress size={14} />}\n      {!loading && 'Sync'}\n    </Button>\n  );\n}\n\nclass MyTaskList extends Component {\n \n  constructor(props) {\n    super(props);\n    this.state = { file: null };\n    this.state = {\n      task: \"\",\n      category:\"\",\n      serialNo:\"\",\n      arbetsGang:\"\",\n      arbetsTid:\"\",\n      image: { file: null } ,\n      tasklist: [],\n      selection : 1,\n      categoryItem:[],\n      categoryId:\"\",\n      open:[false],\n      loading: false\n    };\n    \n    window.localStorage.clear();\n  }\n   onChange = async (event) => {\n    const file = event.target.files[0];\n   };\n   onClick = () => {\n     if(this.state.connectionStatus=='online'){\n    this.setState({ loading: true });\n    setTimeout(() => this.setState({ loading: false }), 3000); //3 seconds\n    let tasklist = JSON.parse(localStorage.getItem(\"tasklist\"));\n    \n    if(tasklist){\n     tasklist.map((item, index) => {\n      //if (tasklist[index].status == true){\n      console.log(\"tasklist\",tasklist);\n      var formdata =new formData();\n      formdata.append('title',item.task);\n      formdata.append('serialNo',item.serialNo);\n      formdata.append('category_id', this.state.categoryId);\n      formdata.append('arbetsGang',item.arbetsGang);\n      formdata.append('arbetsTid',item.arbetsTid);\n      const contentType = 'image/png';\n      const data = item.image.split('base64,')[1];\n      const blob = base64StringToBlob(data, contentType);\n        formdata.append('image',blob);\n         var config = {\n          method: 'post',\n          url: 'https://localhost:8080/api/v1/admin/productx',\n          headers: { \n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          data : formdata\n        };\n      axios(config)\n         .then(function (response) {\n          console.log(JSON.stringify(response.data));\n        })\n      \n        .catch(function (error) {\n          Swal.fire( '',\n          'Kontrollera ditt internet förbindelse',\n          '');\n          console.log(error);\n        });\n     // }\n    });\n  }\n     }\n     else{\n      Swal.fire(\n        'The Internet?',\n        'Controllera ditt internet förbindelse',\n        'question'\n      )\n     }\n};\n  // on load get the task list\n  componentDidMount = () => {\n     var status=navigator.onLine;\n    if(status) {\n      this.setState({connectionStatus:\"online\"}); \n       }else{\n       this.setState({connectionStatus:\"offline\"});\n      }\n     this.getTasks();\n        //Category List loaded from database\n     axios.get('https://kobolde.ahoora.se:8443/api/v1/admin/category').then(res=>{\n         const categories=res.data;\n         localStorage.setItem(\"categoryItem\", JSON.stringify(categories));\n         let categoryItem = JSON.parse(localStorage.getItem(\"categoryItem\")); \n         this.setState({categoryItem:categoryItem});\n         if(Object.keys(categoryItem)[0]){\n          this.setState({categoryId:categoryItem[Object.keys(categoryItem)[0]]._id});\n         }\n         })\n  \n    };\n  \n   handleClose = () => {\n      this.setState({open:false});\n    };\n    \n   handleOpen = () => {\n    this.setState({open:true});\n    };\n   fileChangedHandler=(event)=> {\n    var fileInput = false\n    if(event.target.files[0]) {\n        fileInput = true\n    }\n    if(fileInput) {\n        Resizer.imageFileResizer(\n            event.target.files[0],\n            300,\n            300,\n            'JPEG',\n            100,\n            0,\n            uri => {\n                 this.setState({\n                  image: uri\n                });\n                console.log(uri)\n            },\n            'base64'\n        );\n    }\n}\n handleChange = (event) => {\n  this.setState({categoryId:event.target.value});\n};\n  onChange = event => {\n  \n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n     // add task to the list\n  onSubmit = () => {\n    // check is task is empty string\n    if (this.state.task) {\n      // get the task list from the local storage\n      let tasklist = JSON.parse(localStorage.getItem(\"tasklist\"));\n\n      // task list is null means empty\n      // create an empty list\n      if (tasklist == null) {\n        tasklist = [];\n      }\n      // create task object\n      // default status is false\n    \n      \n      let task = {\n        \n        task: ` ${this.state.task}`,\n        category: `${this.state.categoryId}`,\n        serialNo: ` ${this.state.serialNo}`,\n        arbetsGang: ` ${this.state.arbetsGang}`,\n        arbetsTid: ` ${this.state.arbetsTid}`,\n        image:` ${this.state.image}`,\n        status: false\n      };\n    \n      // add the task to the task list\n      tasklist.push(task);\n      // save the task list in the local storage\n      localStorage.setItem(\"tasklist\", JSON.stringify(tasklist));\n      // clear the form\n      this.setState({ task: \"\" });\n      this.setState({category:\"\"});\n      this.setState({serialNo:\"\"});\n      this.setState({arbetsGang:\"\"});\n      this.setState({arbetsTid:\"\"});\n      this.setState({image:\"\"});\n     // refresh the tasks\n      this.getTasks();\n    }\n  };\n  // get all the tasks\n  getTasks = () => {\n    const { classes } = this.props;\n    // get the task list from the local storage\n    let tasklist = JSON.parse(localStorage.getItem(\"tasklist\"));\n    // check if task list is empty\n    if (tasklist) {\n      // sort all the tasks on the basis of status\n      // completed task will move down\n      tasklist = tasklist.sort((a, b) => {\n        if (a.status) {\n          return 1;\n        } else if (b.status) {\n          return -1;\n        }\n        return 0;\n      });\n\n      // save the task list in the local storage\n      localStorage.setItem(\"tasklist\", JSON.stringify(tasklist));\n\n      // set the tasklist to the state\n      this.setState({\n        // default color\n        // Incomplete: yellow\n        // complete: green\n        tasklist: tasklist.map((item, index) => {\n          let color = \"yellow\";\n          let cardBackground = { background: \"white\" };\n          let taskComplete = { textDecoration: \"none\" };\n          if (item.status) {\n            color = \"green\";\n            cardBackground.background = \"beige\";\n            taskComplete[\"textDecoration\"] = \"line-through\";\n          }\n          return (\n          <Card1 key={index} color={color} fluid style={cardBackground} className={classes.root_card}> \n          <CardActionArea>\n          <CardMedia\n          className={classes.media}\n          image={item.image}\n      \n          />\n        <CardContent>\n          <Typography gutterBottom variant=\"body2\" component=\"h2\">\n          Produkt Title:{item.task}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Produkt serialNo:{item.serialNo}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Produkt arbetsGång:{item.arbetsGang}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Produkt arbetsTid:{item.arbetsTid}\n          </Typography>\n         </CardContent>\n         </CardActionArea>\n        <CardActions>\n        <Icon\n         link\n         name=\"check circle\"\n         color=\"green\"\n         onClick={() => this.updateTask(index)}\n         />\n         <span style={{ paddingRight: 10 }}>Done</span>\n        <Icon\n         link\n         name=\"undo\"\n         color=\"yellow\"\n         onClick={() => this.undoTask(index)}\n         />\n        <span style={{ paddingRight: 10 }}>Undo</span>\n        <IconButton aria-label=\"delete\" className={classes.margin}  color=\"secondary\">\n          <TrashIcon fontSize=\"small\" onClick={() => this.deleteTask(index)}/>\n          </IconButton>\n\n    \n      </CardActions>\n      </Card1>\n        );\n          \n        })\n      });\n    }\n  };\n\n  // update the task status to true\n  updateTask = index => {\n    \n    // get the task list from the local storage\n    let tasklist = JSON.parse(localStorage.getItem(\"tasklist\"));\n    // change status to true\n    tasklist[index].status = true;\n    // save the updated task list\n    localStorage.setItem(\"tasklist\", JSON.stringify(tasklist));\n    // refresh the task list\n    this.getTasks();\n  };\n\n  // undone the task status from true to false\n  undoTask = index => {\n    // get the task list from the local storage\n    let tasklist = JSON.parse(localStorage.getItem(\"tasklist\"));\n    // change status to false\n    tasklist[index].status = false;\n    // save the updated task list\n    localStorage.setItem(\"tasklist\", JSON.stringify(tasklist));\n    // refresh the task list\n    this.getTasks();\n  };\n\n  // delete the task from the task list\n  deleteTask = index => {\n    // get the task list from the local storage\n    let tasklist = JSON.parse(localStorage.getItem(\"tasklist\"));\n    // remove the task from the task list\n    tasklist.splice(index, 1);\n    // save the updated task list\n    localStorage.setItem(\"tasklist\", JSON.stringify(tasklist));\n    // refresh the task list\n    this.getTasks();\n  };\n\n  render() {\n    const { classes } = this.props;\n    const isConnection=this.state.connectionStatus\n    let icon;\n    if(isConnection){\n     icon=<WifiIcon></WifiIcon>\n    }else\n    {icon=<WifiOffIcon></WifiOffIcon>}\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n       <Grid container spacing={2}\n        direction=\"row\">\n          <Grid item xs={12}>\n            <FormControl className={classes.formControl} variant=\"outlined\">\n              <NativeSelect\n              id=\"demo-controlled-open-select\"\n              variant=\"outlined\"\n              open={this.open}\n              className={classes.Field}\n              onClose={this.handleClose}\n              onOpen={this.handleOpen}\n              onChange={this.handleChange}\n            >\n            {this.state.categoryItem.map(item =>(\n              <option value={item._id}>\n                {item.title }\n              </option>\n              \n            ))}\n            </ NativeSelect>\n            </FormControl>\n            <Form  className={classes.container} onSubmit={this.onSubmit} novalidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              novalidate\n              fullWidth\n              type=\"text\"\n              name=\"task\"\n              onChange={this.onChange}\n              value={this.state.task}\n              placeholder=\"motor...\"\n              />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              novalidate\n              fullWidth\n              type=\"text\"\n              name=\"serialNo\"\n              onChange={this.onChange}\n              value={this.state.serialNo}\n              placeholder=\"serieNummer...\"\n              />\n              <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              novalidate\n              fullWidth\n              type=\"text\"\n              name=\"arbetsGang\"\n              onChange={this.onChange}\n              value={this.state.arbetsGang}\n              placeholder=\"arbetsGång...\"\n              />\n              <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              novalidate\n              fullWidth\n              type=\"text\"\n              name=\"arbetsTid\"\n              onChange={this.onChange}\n              value={this.state.arbetsTid}\n              placeholder=\"arbetsTid...\"\n              />\n              <input accept=\"image/*\" className={classes.input} name=\"file\" id=\"icon-button-file\" type=\"file\" onChange={this.fileChangedHandler}/>\n              <label htmlFor=\"icon-button-file\">\n              <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n              <PhotoCamera />\n              </IconButton>\n              </label>\n                <Button\n                 variant=\"outlined\"\n                 margin=\"normal\"\n                 fullWidth\n                 type=\"submit\"\n                 fullWidth\n                 variant=\"contained\"\n                 color=\"primary\"\n                 onClick={this.onSubmit}\n                 className={classes.submit} >\n                Lägg till ny Produkt\n                </Button>             \n                <React.Fragment>\n                {this.state.loading && <ColoredLinearProgress />}\n                <br />\n                <ButtonComponent   variant=\"outlined\"\n                 margin=\"normal\"\n                 fullWidth onClick={this.onClick} loading={this.state.loading}/>\n                </React.Fragment>\n      \n        </Form>\n        </Grid>\n        </Grid>\n             \n      \n        <Grid item xs={12} sm={9} md={9} lg={9}>\n        <Card.Group className={classes.paper}>{this.state.tasklist}</Card.Group>\n        </Grid>\n     \n    \n      </div>\n      </Container>\n    );\n  }\n}\n\nexport default withStyles(styles)(MyTaskList);"]},"metadata":{},"sourceType":"module"}